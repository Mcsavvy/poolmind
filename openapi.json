{
  "openapi": "3.0.0",
  "info": {
    "title": "Poolmind Orchestrator API",
    "description": "API documentation for the Poolmind Orchestrator service",
    "version": "1.0",
    "contact": {}
  },
  "servers": [],
  "paths": {
    "/transactions/deposits": {
      "post": {
        "description": "Creates a new deposit transaction for the authenticated user. The transaction will be set to pending status and monitored for confirmation.",
        "operationId": "TransactionsController_createDeposit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount", "sourceAddress"],
                "properties": {
                  "amount": {
                    "type": "string",
                    "description": "Amount of STX to deposit (as string to preserve precision)",
                    "example": "100.000000"
                  },
                  "sourceAddress": {
                    "type": "string",
                    "description": "Stacks wallet address sending the deposit",
                    "example": "SP1HTBVD3JG9C05J7HBJTHGR0GGW7KX975CN9AX18"
                  },
                  "network": {
                    "type": "string",
                    "enum": ["mainnet", "testnet"],
                    "description": "Network to use for the transaction",
                    "example": "mainnet"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Optional notes for the transaction",
                    "example": "First deposit to the pool"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional tags for categorization",
                    "example": ["initial", "large"]
                  }
                },
                "description": "Reference not found: #/components/schemas/",
                "x-missing-ref": "#/components/schemas/"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deposit transaction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction": {
                          "type": "object",
                          "description": "The created transaction object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit transaction created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Invalid amount specified"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a deposit transaction",
        "tags": ["Transactions"]
      }
    },
    "/transactions/withdrawals": {
      "post": {
        "description": "Creates a new withdrawal transaction for the authenticated user. The transaction will be set to pending status and monitored for confirmation.",
        "operationId": "TransactionsController_createWithdrawal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount", "destinationAddress"],
                "properties": {
                  "amount": {
                    "type": "string",
                    "description": "Amount of STX to withdraw (as string to preserve precision)",
                    "example": "50.000000"
                  },
                  "destinationAddress": {
                    "type": "string",
                    "description": "Stacks wallet address to receive the withdrawal",
                    "example": "SP1HTBVD3JG9C05J7HBJTHGR0GGW7KX975CN9AX18"
                  },
                  "poolSharesBurned": {
                    "type": "string",
                    "description": "Amount of pool shares to burn for this withdrawal",
                    "example": "45.123456"
                  },
                  "minimumAmount": {
                    "type": "string",
                    "description": "Minimum STX amount to receive (slippage protection)",
                    "example": "49.000000"
                  },
                  "isEmergencyWithdrawal": {
                    "type": "boolean",
                    "description": "Whether this is an emergency withdrawal",
                    "example": false
                  },
                  "network": {
                    "type": "string",
                    "enum": ["mainnet", "testnet"],
                    "description": "Network to use for the transaction",
                    "example": "mainnet"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Optional notes for the transaction",
                    "example": "Partial withdrawal for expenses"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional tags for categorization",
                    "example": ["partial", "expenses"]
                  }
                },
                "description": "Reference not found: #/components/schemas/",
                "x-missing-ref": "#/components/schemas/"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Withdrawal transaction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction": {
                          "type": "object",
                          "description": "The created transaction object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal transaction created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Invalid amount specified"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a withdrawal transaction",
        "tags": ["Transactions"]
      }
    },
    "/transactions/{id}": {
      "get": {
        "description": "Retrieves a specific transaction by its ID. Users can only access their own transactions unless they are admin/moderator.",
        "operationId": "TransactionsController_getTransaction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Transaction ID",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Transaction object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Transaction not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get transaction by ID",
        "tags": ["Transactions"]
      }
    },
    "/transactions": {
      "get": {
        "description": "Retrieves transactions for the authenticated user with pagination and filtering options.",
        "operationId": "TransactionsController_getUserTransactions",
        "parameters": [
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "description": "Filter to date (ISO string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "description": "Filter from date (ISO string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search in notes, txId, addresses",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "enum": ["createdAt", "updatedAt", "amount"],
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by transaction status",
            "schema": {
              "enum": [
                "pending",
                "broadcast",
                "confirming",
                "confirmed",
                "failed",
                "cancelled"
              ],
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by transaction type",
            "schema": {
              "enum": ["deposit", "withdrawal"],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page (1-100)",
            "schema": {
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "description": "Array of transaction objects"
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "example": 20
                            },
                            "total": {
                              "type": "number",
                              "example": 150
                            },
                            "totalPages": {
                              "type": "number",
                              "example": 8
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user transactions",
        "tags": ["Transactions"]
      }
    },
    "/transactions/stats/summary": {
      "get": {
        "description": "Retrieves transaction statistics and summary for the authenticated user.",
        "operationId": "TransactionsController_getUserTransactionStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Transaction statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalTransactions": {
                          "type": "number",
                          "example": 25
                        },
                        "totalDeposits": {
                          "type": "number",
                          "example": 15
                        },
                        "totalWithdrawals": {
                          "type": "number",
                          "example": 10
                        },
                        "pendingTransactions": {
                          "type": "number",
                          "example": 2
                        },
                        "confirmedTransactions": {
                          "type": "number",
                          "example": 20
                        },
                        "failedTransactions": {
                          "type": "number",
                          "example": 3
                        },
                        "totalDepositAmount": {
                          "type": "string",
                          "example": "1500.000000"
                        },
                        "totalWithdrawalAmount": {
                          "type": "string",
                          "example": "500.000000"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user transaction statistics",
        "tags": ["Transactions"]
      }
    }
  }
}
